name: Build and Push Docker Image

on:
  # 当代码推送到 main 分支时触发
  push:
    branches:
      - main
  # 支持手动触发
  workflow_dispatch:

env:
  # 使用 ghcr.io 作为容器镜像仓库
  REGISTRY: ghcr.io
  # 镜像名称基于仓库名称（会自动转换为小写）
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # 设置权限以允许推送到 GitHub Container Registry
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登录到 GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 提取 Docker 元数据
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # 为 main 分支设置 latest 标签
            type=raw,value=latest,enable={{is_default_branch}}
            # 基于 git commit SHA 的标签
            type=sha,prefix={{branch}}-,format=short
            # 基于 git commit SHA 的完整标签
            type=sha,format=long
            # 基于分支名称的标签
            type=ref,event=branch
            # 基于日期的标签
            type=raw,value={{date 'YYYYMMDD-HHmmss'}}

      - name: 构建并推送 Docker 镜像
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # 启用缓存以加快构建速度
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # 构建多平台镜像（可选，如果只需要 linux/amd64 可以删除此行）
          platforms: linux/amd64,linux/arm64

      - name: 输出镜像信息
        run: |
          echo "### 🐳 Docker 镜像构建成功！" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**镜像标签：**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**拉取镜像命令：**" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

